<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Settings_Description" xml:space="preserve">
    <value>This feature requires Windows 10 version 1903 or higher</value>
    <comment>Windows = the OS</comment>
  </data>
  <data name="KeyboardManager" xml:space="preserve">
    <value>Keyboard Manager</value>
  </data>
  <data name="CreateWindowFailed_ErrorMessage" xml:space="preserve">
    <value>Call to CreateWindow failed!</value>
  </data>
  <data name="CreateWindowFailed_ErrorTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="RegisterClassFailed_ErrorMessage" xml:space="preserve">
    <value>Windows registration failed!</value>
    <comment>This refers to an application window</comment>
  </data>
  <data name="RegisterClassFailed_ErrorTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="EditKeyboard_WindowName" xml:space="preserve">
    <value>Remap keys</value>
    <comment>keys on a keyboard</comment>
  </data>
  <data name="EditShortcuts_WindowName" xml:space="preserve">
    <value>Remap shortcuts</value>
  </data>
  <data name="Ok_Button" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel_Button" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Continue_Button" xml:space="preserve">
    <value>Continue anyway</value>
  </data>
  <data name="EditKeyboard_SourceHeader" xml:space="preserve">
    <value>Select:</value>
    <comment>verb, alternative to "type a key on a keyboard"</comment>
  </data>
  <data name="EditKeyboard_TargetHeader" xml:space="preserve">
    <value>To send:</value>
  </data>
  <data name="EditShortcuts_TargetHeader" xml:space="preserve">
    <value>To send:</value>
  </data>
  <data name="EditShortcuts_TargetAppHeader" xml:space="preserve">
    <value>Target app:</value>
  </data>
  <data name="EditKeyboard_OrphanedDialogTitle" xml:space="preserve">
    <value>Warning: The following keys do not have assignments:</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="EditKeyboard_PartialConfirmationDialogTitle" xml:space="preserve">
    <value>Some of the keys could not be remapped. Do you want to continue anyway?</value>
  </data>
  <data name="EditShortcuts_PartialConfirmationDialogTitle" xml:space="preserve">
    <value>Some of the shortcuts could not be remapped. Continue anyway?</value>
  </data>
  <data name="EditKeyboard_Info" xml:space="preserve">
    <value>Select the key you want to change ("Select") and then the key or shortcut you want it to send ("To send").</value>
  </data>
  <data name="EditKeyboard_InfoExample" xml:space="preserve">
    <value>Example of a remapping: Select A and send "Ctrl+C", "A" would be your "Select" and "Ctrl+C" would be your "To send" command.</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="EditShortcuts_Info" xml:space="preserve">
    <value>Select the shortcut you want to change ("Select") and then the key or shortcut you want it to invoke ("To send").</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="EditShortcuts_InfoExample" xml:space="preserve">
    <value>Example of a remapping: Select "Alt+T" and send "Ctrl+T" only on Microsoft Edge. "MSEdge" (exe name) would be your "Target app". Note: if you remapped a key, that will influence the shortcut.</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="Type_Button" xml:space="preserve">
    <value>Select</value>
    <comment>verb, alternative to "type a key on a keyboard"</comment>
  </data>
  <data name="TypeKey_Title" xml:space="preserve">
    <value>Select a key on selected keyboard</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="TypeShortcut_Title" xml:space="preserve">
    <value>Select the keys in the shortcut</value>
    <comment>Keys on a keyboard</comment>
  </data>
  <data name="TypeKey_Header" xml:space="preserve">
    <value>Key selected:</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="TypeShortcut_Header" xml:space="preserve">
    <value>Keys selected:</value>
    <comment>Keys on a keyboard</comment>
  </data>
  <data name="Type_HoldEnter" xml:space="preserve">
    <value>Hold Enter to continue</value>
  </data>
  <data name="Type_HoldEsc" xml:space="preserve">
    <value>Hold Esc to discard</value>
  </data>
  <data name="EditShortcuts_AllApps" xml:space="preserve">
    <value>All apps</value>
  </data>
  <data name="ErrorMessage_RemapSuccessful" xml:space="preserve">
    <value>Remapping successful</value>
  </data>
  <data name="ErrorMessage_RemapUnsuccessful" xml:space="preserve">
    <value>Some remappings were not applied</value>
  </data>
  <data name="ErrorMessage_SameKeyPreviouslyMapped" xml:space="preserve">
    <value>Cannot remap a key more than once</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_MappedToSameKey" xml:space="preserve">
    <value>Cannot remap a key to itself</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_ConflictingModifierKey" xml:space="preserve">
    <value>Cannot remap this key as it conflicts with another remapped key</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_SameShortcutPreviouslyMapped" xml:space="preserve">
    <value>Cannot remap a shortcut more than once for the same target app</value>
  </data>
  <data name="ErrorMessage_MapToSameShortcut" xml:space="preserve">
    <value>Cannot remap a shortcut to itself</value>
  </data>
  <data name="ErrorMessage_ConflictingModifierShortcut" xml:space="preserve">
    <value>Cannot remap this shortcut as it conflicts with another remapped shortcut</value>
  </data>
  <data name="ErrorMessage_WinL" xml:space="preserve">
    <value>Cannot remap from/to Win L</value>
    <comment>Win refers to the key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_CtrlAltDel" xml:space="preserve">
    <value>Cannot remap from/to Ctrl Alt Del</value>
  </data>
  <data name="ErrorMessage_SaveFailed" xml:space="preserve">
    <value>Failed to save the remappings</value>
  </data>
  <data name="ErrorMessage_ShortcutStartWithModifier" xml:space="preserve">
    <value>Shortcut must start with a modifier key</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_ShortcutNoRepeatedModifier" xml:space="preserve">
    <value>Shortcut cannot contain a repeated modifier</value>
  </data>
  <data name="ErrorMessage_ShortcutAtleast2Keys" xml:space="preserve">
    <value>Shortcut must have at least 2 keys</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_ShortcutOneActionKey" xml:space="preserve">
    <value>Shortcut must contain an action key</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_ShortcutMaxOneActionKey" xml:space="preserve">
    <value>Shortcut cannot have more than one action key</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_MaxShortcutSize" xml:space="preserve">
    <value>Shortcuts can only have up to 4 modifier keys</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="ErrorMessage_Default" xml:space="preserve">
    <value>Unexpected error</value>
  </data>
  <data name="Key_DropDown_Combobox" xml:space="preserve">
    <value>Key</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="Add_Key_Remap_Button" xml:space="preserve">
    <value>Add key remapping</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="Add_Shortcut_Button" xml:space="preserve">
    <value>Add shortcut remapping</value>
  </data>
  <data name="Delete_Remapping_Button" xml:space="preserve">
    <value>Delete remapping</value>
  </data>
  <data name="Delete_Remapping_Event" xml:space="preserve">
    <value>Remapping deleted</value>
  </data>
  <data name="AutomationProperties_Row" xml:space="preserve">
    <value>Row </value>
    <comment>Row as in horizontal rows in a table, and columns</comment>
  </data>
  <data name="ERRORMESSAGE_DISABLEASACTIONKEY" xml:space="preserve">
    <value>Disable can not be an action or a modifier key</value>
    <comment>Key on a keyboard</comment>
  </data>
  <data name="EditShortcuts_SourceHeader" xml:space="preserve">
    <value>Select:</value>
    <comment>key sequence on a keyboard, example: Ctrl+C to copy a string</comment>
  </data>
</root>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Plugin.Folder.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Plugin.Folder.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail to set text in clipboard.
        /// </summary>
        public static string Microsoft_plugin_folder_clipboard_failed {
            get {
                return ResourceManager.GetString("Microsoft_plugin_folder_clipboard_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy path (Ctrl+C).
        /// </summary>
        public static string Microsoft_plugin_folder_copy_path {
            get {
                return ResourceManager.GetString("Microsoft_plugin_folder_copy_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail to open file at.
        /// </summary>
        public static string Microsoft_plugin_folder_file_open_failed {
            get {
                return ResourceManager.GetString("Microsoft_plugin_folder_file_open_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open containing folder (Ctrl+Shift+E).
        /// </summary>
        public static string Microsoft_plugin_folder_open_containing_folder {
            get {
                return ResourceManager.GetString("Microsoft_plugin_folder_open_containing_folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open path in console (Ctrl+Shift+C).
        /// </summary>
        public static string Microsoft_plugin_folder_open_in_console {
            get {
                return ResourceManager.GetString("Microsoft_plugin_folder_open_in_console", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Showing {0:N0} of {1:N0} results.
        /// </summary>
        public static string Microsoft_plugin_folder_truncation_warning_subtitle {
            get {
                return ResourceManager.GetString("Microsoft_plugin_folder_truncation_warning_subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: Folder Plugin Results truncated..
        /// </summary>
        public static string Microsoft_plugin_folder_truncation_warning_title {
            get {
                return ResourceManager.GetString("Microsoft_plugin_folder_truncation_warning_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Navigates folders starting from a drive letter &apos;C:\&apos; or from the user home &apos;~&apos;..
        /// </summary>
        public static string wox_plugin_folder_plugin_description {
            get {
                return ResourceManager.GetString("wox_plugin_folder_plugin_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder.
        /// </summary>
        public static string wox_plugin_folder_plugin_name {
            get {
                return ResourceManager.GetString("wox_plugin_folder_plugin_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File: {0}.
        /// </summary>
        public static string wox_plugin_folder_select_file_result_subtitle {
            get {
                return ResourceManager.GetString("wox_plugin_folder_select_file_result_subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tip: Use &gt; to search in folders, * to search file by mask, &gt;* for both..
        /// </summary>
        public static string wox_plugin_folder_select_folder_first_result_subtitle {
            get {
                return ResourceManager.GetString("wox_plugin_folder_select_folder_first_result_subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open: {0}.
        /// </summary>
        public static string wox_plugin_folder_select_folder_first_result_title {
            get {
                return ResourceManager.GetString("wox_plugin_folder_select_folder_first_result_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not start.
        /// </summary>
        public static string wox_plugin_folder_select_folder_OpenFileOrFolder_error_message {
            get {
                return ResourceManager.GetString("wox_plugin_folder_select_folder_OpenFileOrFolder_error_message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder: {0}.
        /// </summary>
        public static string wox_plugin_folder_select_folder_result_subtitle {
            get {
                return ResourceManager.GetString("wox_plugin_folder_select_folder_result_subtitle", resourceCulture);
            }
        }
    }
}
